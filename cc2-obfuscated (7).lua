-- This file was generated using Luraph Obfuscator v13.5.4

do return(function(Wr,Sr,Vr,er,Xr,sr,wr,Ar,Er,Jr,cr,xr,Kr,Tr,Zr,nr,mr,Fr,Br,yr,br,pr,Rr,zr,hr,gr,lr,ur,Pr,Gr,jr,Yr,Nr,dr,Or,ar,...)local Dr={};local v=Nr;local f,D,Ur,I,i,Cr,A=pcall,br,3,nil,nil,nil,(nil);repeat if not(Ur<=1)then if Ur==0X2 then A=2^52;Ur=4;else I=hr;do Ur=1;end;end;else do if Ur~=0 then i=jr;Ur=0;else Cr=1;Ur=0X2;end;end;end;until Ur>3;Ur=0X00002;local H,N,Z=nil,nil,nil;repeat do if not(Ur<=0)then do if Ur==1 then Z=0X0100000000;Ur=0X3;else H=string.char;Ur=0;end;end;else N=string.gsub;Ur=1;end;end;until Ur>=3;Ur=0X0;local B,h=nil,(nil);do while Ur<=0X001 do if Ur~=0X00 then h=table.insert;Ur=2;else B=zr;Ur=1;end;end;end;local G,x=Br,Gr.yield;local z=rawget;Ur=0X1;local E=(nil);while Ur~=0X2 do if Ur~=0X0 then E=0X1;Ur=0;else Ur=0X0002;end;end;local t,K=tonumber,nil;local O=getfenv;do for e3=0x0,1 do if e3~=0 then else K=(O and O()or cr);end;end;end;local w,g=lr,(nil);local W=(Or or table.unpack);local l,e,j,M,C=setfenv,(xr or nr),setmetatable,Wr.byte,(error);do w=N(I(w,0X5),"..",function(SY)if M(SY,2)==0x48 then for Th=0X00000,1 do if Th~=0 then return"";else do g=t(I(SY,0X001,1));end;end;end;else local EO,yO=0X00000,(nil);while EO<=0X00001 do do if EO~=0X00 then do if not(g)then return yO;else local Np=i(yO,g);local mp=(0x00001);while true do if mp==0X00 then return Np;else g=nil;mp=0;end;end;end;end;EO=2;else yO=H(t(SY,0x10));EO=1;end;end;end;end;end);end;local J=function()local ru=M(w,E,E);E=E+0X1;return ru;end;Ur=0x2;local R,S,c,m=nil,nil,nil,(nil);while Ur~=4 do if not(Ur<=1)then if Ur~=2 then do c=Kr;end;Ur=0x0;else R=2147483648;Ur=1;end;else do if Ur==0 then m=function()local Ci,Ii,Oi,Ai=M(w,E,E+3);E=E+0X4;do return Ai*16777216+Oi*0X10000+Ii*0x100+Ci;end;end;Ur=4;else do S=R-0X1;end;do Ur=3;end;end;end;end;end;local p=(Z-0x00001);do Ur=0;end;local V,X,P,u=nil,nil,nil,nil;repeat if Ur<=0X00001 then do if Ur==0 then V={[0]=Er};Ur=3;else u={[0]={[0X0]=0,0x1,0X2,wr,4,5,6,0X7,8,9,0X0000a,0XB,12,0x00D,gr,0XF},{[Jr]=1,0X0,0X00003,2,5,0X4,7,mr,9,8,Rr,10,0XD,12,15,0Xe},{[0]=0X2,3,Jr,1,6,0X7,4,5,0X0A,0X0B,0X0008,9,14,15,0X0C,0XD},{[Jr]=3,2,Er,0X0,Zr,0x6,Ar,0x4,11,0X0A,0X0009,8,15,0Xe,13,pr},{[0X0]=0x4,0X05,0X0006,7,0X0000,0X001,0x2,3,12,13,14,15,0X8,0X009,0X000a,11},{[0]=Ar,0X4,0X0007,0X6,Er,0,0X00003,2,0xD,0Xc,15,0xe,0X9,8,11,0Xa},{[0x00000]=0X6,0X7,0X4,5,Sr,3,0x0,1,gr,15,0XC,0x0d,0XA,11,8,0X0009},{[0]=Zr,0x6,0X05,4,3,0x2,1,0X0,15,gr,13,pr,Rr,0X000a,Vr,8},{[Jr]=Xr,Vr,0Xa,0XB,0XC,0X0D,0X000E,Pr,0X0,Er,Sr,3,4,5,6,0X7},{[0]=9,0X0008,Rr,10,0XD,pr,0xf,0Xe,0X1,0,0X3,2,0x5,4,0x7,0X6},{[0X0]=10,0XB,8,0x9,0XE,0x00F,0X000c,0x00D,0X2,3,Jr,1,0X6,0x7,0x00004,0X5},{[0X0]=11,0X00a,0X009,8,15,0X0e,13,0XC,3,2,0X001,0X0000,Zr,6,5,0x4},{[0X0]=0X00c,0Xd,14,15,8,Vr,yr,11,0X4,0X5,6,7,0X0,0X1,0X02,0X3},{[0X0]=13,12,0XF,0Xe,0x9,0X8,11,10,0x5,4,7,6,0X001,0X0,3,0x0002},{[0X00]=14,0Xf,0x00c,13,10,0Xb,0X008,9,0x006,7,4,Ar,2,3,0,0x1},{[0]=15,0X0E,0x0d,12,Rr,0Xa,0x9,0X8,0X7,6,0X0005,4,0X3,Sr,0X1,0}};Ur=0X5;end;end;elseif Ur<=0X2 then do P=function()local JM,XM=nil,(nil);for Di=0,1 do if Di==0 then JM,XM=m(),m();else do if XM>=R then XM=XM-Z;end;end;end;end;return XM*Z+JM;end;end;do Ur=1;end;else if Ur==0X3 then do local MF=(nil);local iF=(1);while iF<2 do do if iF~=0 then MF=2;do iF=0;end;else for Jf=0X1,0x1F do local If=(1);do while(true)do if If==0X0 then MF=MF*0X2;do break;end;else do V[Jf]=MF;end;do If=0x0;end;end;end;end;end;iF=2;end;end;end;end;Ur=4;else do X=function(b9,Y9,c9)local r9=(b9/V[Y9])%V[c9];r9=r9-r9%Er;return r9;end;end;do Ur=0X0002;end;end;end;until Ur>0X4;do Ur=0;end;local y,q=nil,nil;repeat if Ur~=0X00000 then do q=ur;end;Ur=0x00002;else do y=function()local Rj,Uj,Qj,Ij,gj,xj,aj=0X3,nil,nil,nil,nil,nil,(nil);do while'r?'do if Rj<=3 then do if not(Rj<=0X0001)then if Rj==0X2 then xj=X(Qj,0x14,0XB);Rj=1;else Uj=m();Rj=0X005;end;else if Rj==0x0 then do if xj==0 then do if aj==0 then return Ij*0X0000;else xj=0X1;gj=0X00;end;end;elseif xj~=2047 then else if aj==0X0 then return Ij*(0X0/0);else return Ij*(Er/0X00);end;end;end;Rj=0X8;else do aj=X(Qj,0X00000,20)*Z+Uj;end;Rj=0X0000;end;end;end;elseif Rj<=0X5 then if Rj==0x4 then if not(Uj==0X0 and Qj==0)then else return 0;end;do Rj=0X7;end;else Qj=m();Rj=0X4;end;else do if not(Rj<=6)then do if Rj==0x7 then Ij=(-1)^X(Qj,31,1);Rj=0X6;else return Ij*(2^(xj-1023))*(aj/A+gj);end;end;else gj=Er;Rj=0X002;end;end;end;end;end;end;end;Ur=1;end;until Ur>0X01;local d=(e and e.bxor or function(mg,Hg)local Ig,dg=nil,(nil);for YP=0X0,0X5 do if not(YP<=2)then if not(YP<=3)then do if YP~=0X4 then return dg+mg*Ig+Hg*Ig;else while mg>0x0 and Hg>Jr do local PD,gD=nil,(nil);for zU=0X00000,0x5 do if not(zU<=2)then if not(zU<=3)then if zU==0X4 then Hg=(Hg-gD)/16;else Ig=Ig*16;end;else mg=(mg-PD)/16;end;else if not(zU<=0)then if zU==1 then gD=Hg%16;else dg=dg+u[PD][gD]*Ig;end;else PD=mg%16;end;end;end;end;end;end;else do dg=0X0;end;end;elseif not(YP<=0X0)then if YP==0X1 then Ig=0X1;else Hg=Hg%Z;end;else mg=mg%Z;end;end;end);local Y=(e and e[er]or function(aA,gA)aA=aA%Z;do gA=gA%Z;end;do return((aA+gA)-d(aA,gA))/2;end;end);local b=(string.match);local F=e and e.bor or function(uH,QH)uH=uH%Z;QH=QH%Z;return p-Y(p-uH,p-QH);end;local a=(e and e.bnot or function(oH)return p-(oH%Z);end);local o,s=nil,(nil);for Ik=0,1 do if Ik==0 then o=dr;else do s=e and e.lshift;end;end;end;Ur=0X1;local T,r,L=nil,nil,nil;do repeat do if Ur<=0X00001 then if Ur==0 then T=T or function(yT,OT)if not(OT>=32)then else return 0X000;end;local eT,sT=1,nil;repeat do if eT~=0X0 then if OT<0x000 then return s(yT,-OT);end;do eT=0;end;else sT=(yT%Z/V[OT]);eT=2;end;end;until eT>=0X2;return sT-sT%0x0001;end;do Ur=3;end;else T=e and e[Yr];Ur=0X02;end;else do if not(Ur<=0X2)then if Ur==0X3 then r=function()local Cd,Zd=0,(0x0);do while 0x00752779c3 do local wG=M(w,E,E);do E=E+1;end;Cd=F(Cd,s(Y(wG,127),Zd));do if Y(wG,128)==0X000 then return Cd;end;end;Zd=Zd+0X007;end;end;end;Ur=0x4;else L={[Sr]=9,[0X04]=0x01,[7]=3,[8]=6,[mr]=0X00007,[0]=3,[0X8]=9,[5]=0X6,[0x09]=0X0006};Ur=0X00005;end;else s=s or function(ei,pi)if not(pi>=Fr)then else return 0x000;end;local hi=(0X0);while 0.7166982434239546 do if hi~=0 then return(ei*V[pi])%Z;else if not(pi<0X0000)then else return T(ei,-pi);end;do hi=1;end;end;end;end;do Ur=0;end;end;end;end;end;until Ur==0X05;end;Ur=8;local k,Q,vr,tr,qr,fr,U,Ir,Mr,Hr,ir=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);while true do do if Ur<=0x6 then if not(Ur<=0X2)then if not(Ur<=4)then if Ur~=5 then do Q=J();end;Ur=10;else do Dr=sr;end;Ur=0X1;end;else do if Ur~=3 then function Hr()local c2=({{},{},nil,nil,sr,{},nil,sr,sr});local i2,M2=0X1,0X00001;local w2,K2=nil,nil;local I2=(c2[Sr]);while M2<=0x3 do if not(M2<=1)then if M2==2 then do c2[0X000c]=m();end;M2=4;else K2=m()-0X66E8;do M2=0;end;end;else if M2~=0 then w2={};do M2=3;end;else for Wt=1,K2 do(I2)[Wt]={[0x00002]=r(),[0X00004]=k(),[0x6]=J(),[Ar]=k(),[0X0003]=J(),[1]=J(),[Zr]=k()};end;M2=0X2;end;end;end;for J9=0X000,0X1 do if J9==0X00000 then(c2)[0xf]=J();else do c2[9]=r();end;end;end;local z2,Y2=nil,(nil);for PS=0X0,0X06 do do if not(PS<=0x0002)then if PS<=0X4 then if PS~=3 then c2[17]=J();else c2[13]=J();end;else if PS~=0X5 then c2[4]=X(Y2,0X0001,0x001)~=0X00000;else Y2=J();end;end;else if PS<=0x0 then z2={};else if PS==0X1 then(c2)[0X13]=m();else(c2)[10]=J();end;end;end;end;end;(c2)[0X7]=X(Y2,2,1)~=0;do c2[Tr]=J();end;M2=0X1;local N2,A2=nil,(nil);while(true)do if M2<=1 then if M2==0x0 then N2=m()-0X10934;M2=0X003;else c2[yr]=m();M2=0X2;end;else if M2==0X002 then do c2[16]=m();end;M2=0x00000;else A2=J();break;end;end;end;local D2=(J()~=0);local j2,m2,G2=nil,nil,(nil);for np=0x0,0x6 do if np<=2 then if not(np<=0)then if np==1 then do c2[0X8]=r();end;else for PO=0X1,K2 do local kO=(nil);for s0=0,1 do do if s0==0X00000 then kO=c2[0X2][PO];else for Sz,Bz in ipairs(U)do local gz,zz=nil,nil;for Ad=0X0,1 do do if Ad==0X0 then gz=L[Bz];else do zz=kO[gz];end;end;end;end;if zz==2 then local dJ=(0x0);local rJ,aJ=nil,(nil);repeat if not(dJ<=0X0000)then if dJ~=1 then if not(aJ)then else kO[gz]=aJ[0x0001];local JI=nil;local tI=(1);while tI<=0X1 do do if tI~=0 then JI=aJ[2];tI=0X00000;else do JI[#JI+Er]={kO,gz};end;tI=0x002;end;end;end;end;do dJ=0x3;end;else do aJ=w2[rJ];end;do dJ=2;end;end;else rJ=z2[kO[Bz]];dJ=0X0001;end;until dJ>2;elseif zz==Vr then kO[Bz]=PO+kO[Bz]+0X1;end;end;end;end;end;end;end;else for wD=Er,N2 do local qD,gD=nil,nil;do for SO=0X00,0X3 do if not(SO<=1)then if SO==2 then z2[wD-1]=i2;else if gD==43 then do qD=I(fr(A2),0X00006);end;elseif gD==186 then qD=true;elseif gD==0X08e then qD=P();elseif gD==132 then qD=I(fr(A2),y()+m());elseif gD==29 then do qD=y();end;elseif gD==143 then qD=y()+m();elseif gD==209 then do qD=false;end;elseif gD==39 then qD=y()+m();elseif gD==252 then qD=y();end;end;else if SO==0X00000 then do qD=nil;end;else gD=J();end;end;end;end;local CD={qD,{}};for UW=0x0000,0X002 do if UW<=0 then(w2)[i2]=CD;else if UW~=1 then if not(D2)then else for Tc=0,0x001 do if Tc~=0 then Cr=Cr+1;else(Dr)[Cr]=CD;end;end;end;else i2=i2+Er;end;end;end;end;end;else if not(np<=0X4)then if np==0X05 then for XY=0,j2-0X1 do m2[XY]=Hr();end;else G2={};end;else do if np==3 then j2=m()-0x7697;else m2=c2[0x6];end;end;end;end;end;M2=0;local V2=nil;while(true)do if M2<=0x3 then do if not(M2<=1)then if M2~=0X00002 then do(c2)[5]=r();end;M2=0X6;else for t8=1,r()do do(G2)[t8]={J(),r()};end;end;M2=0X00003;end;else if M2==0 then V2=m();M2=7;else do(c2)[0X003]=G2;end;M2=0x00002;end;end;end;else if not(M2<=5)then if M2==6 then do return c2;end;else for QS=0X1,V2 do local rS,CS,nS,JS=0,nil,nil,(nil);while(true)do do if rS<=0X0 then CS=m();rS=0X00001;else if rS==0x0001 then do nS=m();end;rS=0x2;else JS=m();do break;end;end;end;end;end;for Kb=CS,nS do c2[Er][Kb]=JS;end;end;do M2=0X4;end;end;else if M2==4 then(c2)[19]=J();do M2=0X5;end;else(c2)[14]=J();M2=1;end;end;end;end;end;Ur=0Xd;else do tr=function(FN)local cN={M(w,E,E+0X3)};local WN,HN,aN,qN=nil,nil,nil,(nil);for vQ=0x0,3 do if vQ<=1 then do if vQ==0 then do WN=d(cN[1],vr);end;else HN=d(cN[2],vr);end;end;else if vQ~=2 then qN=d(cN[4],vr);else do aN=d(cN[3],vr);end;end;end;end;vr=(0X000059*vr+FN)%0X100;E=E+0x4;return qN*0X1000000+aN*0X010000+HN*256+WN;end;end;Ur=0X0B;end;end;end;else if Ur<=0X0 then function Mr(Bw,Qw,ow)local ew,zw=Qw[4],Qw[0X7];local Rw,jw=Qw[9],(Qw[0X1]);local xw,Xw=Qw[0X2],(Qw[0x6]);local Cw=(Qw[5]);local Gw=(j({},{__mode="v"}));local Dw=(Qw[0X8]);local nw=nil;nw=function(...)local MR,CR,pR=0X0,{},0X00001;local XR=(O and O()or _ENV);local oR,sR=qr(...);oR=oR-0X1;for Bz=0X0,oR do if Cw>Bz then CR[Bz]=sR[Bz+1];else break;end;end;local tR=((XR==K and ow or XR));Ir[0X3]=Qw;Ir[4]=CR;do if not ew then sR=nil;elseif zw then do(CR)[Cw]={n=oR>=Cw and oR-Cw+1 or 0x0,W(sR,Cw+0X01,oR+1)};end;end;end;if tR==XR then else if not(l)then do _ENV=tR;end;else(l)(nw,tR);end;end;local yR,qR,xR,YR=f(function()do while true do local sf=(xw[pR]);local Lf=sf[2];pR=pR+1;if Lf<43 then if not(Lf<0X0015)then if Lf>=32 then if Lf>=37 then if not(Lf<40)then if not(Lf>=41)then local V8=(sf[0X0005]);CR[V8](CR[V8+1]);MR=V8-1;else if Lf~=0X2A then CR[sf[5]]=CR[sf[4]]/CR[sf[0X007]];else(CR)[sf[0X5]]=CR[sf[0X00004]]-CR[sf[0x007]];end;end;else if not(Lf<0x000026)then do if Lf==0x00027 then if sf[7]==0X6C then pR=pR-0X1;xw[pR]={[0x5]=(sf[0X005]-0x6),[0X2]=0X40,[4]=(sf[4]-6)};elseif sf[0X7]~=0X000082 then do repeat local mT,kT=Gw,(CR);if not(#mT>0X0)then else local QW=({});for Od,Jd in G,mT do do for Rq,Yq in G,Jd do do if Yq[0X1]==kT and Yq[2]>=0 then local gx=Yq[0x2];do if not QW[gx]then(QW)[gx]={kT[gx]};end;end;Yq[0x01]=QW[gx];do(Yq)[2]=1;end;end;end;end;end;end;end;until true;end;local nT=(sf[0X5]);return false,nT,nT;else pR=pR-0X001;xw[pR]={[0X5]=(sf[0x5]-104),[2]=0X000,[0X4]=(sf[4]-0x68)};end;else do if sf[7]~=251 then do CR[sf[0x005]]=sR[Cw+0x001];end;else do pR=pR-1;end;xw[pR]={[5]=(sf[0X005]-121),[0X2]=0X40,[4]=(sf[0x00004]-0X79)};end;end;end;end;else local A1=sf[5];CR[A1]=CR[A1](W(CR,A1+1,MR));MR=A1;end;end;else if Lf>=0X22 then if not(Lf>=0X23)then(CR)[sf[5]]=d(CR[sf[0X00004]],CR[sf[0X7]]);else if Lf==36 then local ha=(sf[5]);CR[ha](CR[ha+0X1],CR[ha+2]);MR=ha-1;else do CR[sf[0X00005]]={};end;end;end;else if Lf~=33 then if not(not(CR[sf[0X4]]<=sf[0x3]))then else pR=sf[0x5];end;else MR=sf[0X5];do CR[MR]=CR[MR]();end;end;end;end;else if Lf>=26 then if Lf>=29 then if Lf>=30 then if Lf==31 then repeat local rb,Qb=Gw,CR;if not(#rb>0X0)then else local l3={};for CZ,RZ in G,rb do for CQ,FQ in G,RZ do do if FQ[1]==Qb and FQ[2]>=0 then local o7=FQ[2];if not l3[o7]then l3[o7]={Qb[o7]};end;(FQ)[0X1]=l3[o7];FQ[2]=0X1;end;end;end;end;end;until true;return false,sf[5],MR;else(CR)[sf[0X005]]=CR[sf[4]][CR[sf[0x7]]];end;else CR[sf[5]]=CR[sf[0X4]][sf[0X0003]];end;else do if not(Lf>=0X1b)then do CR[sf[5]]=CR[sf[0X00004]];end;else if Lf==0X1c then CR[sf[0X5]]=tR[sf[0X1]];else local oM=(sf[5]);local TM=((sf[0x7]-0x1)*0X32);local jM=CR[oM];for sE=1,sf[0x4]do do(jM)[TM+sE]=CR[oM+sE];end;end;end;end;end;end;else if not(Lf<0X17)then if not(Lf<24)then do if Lf==0x00019 then do CR[sf[0x5]][CR[sf[4]]]=CR[sf[7]];end;else(CR)[sf[0X00005]]=false;end;end;else CR[sf[5]]=Y(CR[sf[4]],CR[sf[7]]);end;else if Lf==22 then CR[sf[0X5]][sf[0X1]]=sf[3];else local VU,cU=sf[0X5],(sf[4]);MR=VU+cU-1;repeat local Pb,jb=Gw,(CR);if#Pb>0X0 then local MD=({});for sL,YL in G,Pb do for rx,Ix in G,YL do if not(Ix[0X1]==jb and Ix[2]>=0)then else local ke=(Ix[0X02]);if not(not MD[ke])then else(MD)[ke]={jb[ke]};end;do(Ix)[1]=MD[ke];end;Ix[2]=0X0001;end;end;end;end;until true;return true,VU,cU;end;end;end;end;else if not(Lf>=0x00a)then if Lf>=0X5 then if not(Lf>=0x00007)then if Lf==6 then do pR=sf[0X4];end;else local Ct=(sf[0X5]);do CR[Ct]=CR[Ct](CR[Ct+1],CR[Ct+0X0002]);end;MR=Ct;end;else if Lf<0x8 then if not(CR[sf[4]]<CR[sf[7]])then else pR=sf[5];end;else if Lf==9 then CR[sf[0X5]]=Ir[sf[0x4]];else CR[sf[0X5]]=CR[sf[0X04]]>=CR[sf[7]];end;end;end;else do if Lf<0X2 then do if Lf~=0X01 then do if sf[0x7]==0XEd then do pR=pR-0X001;end;do(xw)[pR]={[0x00005]=(sf[0X5]-152),[0X2]=14,[4]=(sf[0X4]-152)};end;elseif sf[0X7]==0X13 then pR=pR-1;xw[pR]={[0X00004]=(sf[4]-0X95),[0X005]=(sf[5]-149),[0X0002]=0x1F};else CR[sf[5]]=#CR[sf[0X4]];end;end;else CR[sf[0X5]]=CR[sf[0X0004]]<CR[sf[7]];end;end;else if Lf>=0X3 then if Lf==4 then(CR)[sf[0X5]]=sf[1];else local z3=Bw[sf[4]];CR[sf[0x05]]=z3[1][z3[0X2]];end;else if sf[7]~=18 then for yL=sf[5],sf[4]do(CR)[yL]=nil;end;else pR=pR-0X1;(xw)[pR]={[5]=(sf[0X5]-63),[4]=(sf[0x4]-63),[2]=0X40};end;end;end;end;end;else do if not(Lf<0xf)then if Lf<0X12 then if not(Lf>=16)then local QO=(sf[0X00005]);MR=QO+sf[0x4]-0x00001;(CR[QO])(W(CR,QO+1,MR));MR=QO-1;else do if Lf~=0X11 then local jI,BI,II=sf[5],sf[0X4],sf[7];if BI==0X00 then else MR=jI+BI-1;end;local nI,LI=nil,nil;if BI==1 then nI,LI=qr(CR[jI]());else nI,LI=qr(CR[jI](W(CR,jI+1,MR)));end;if II~=1 then if II==0 then nI=nI+jI-0x0001;MR=nI;else nI=jI+II-2;MR=nI+0X1;end;local dP=(0);for QF=jI,nI do dP=dP+0X1;(CR)[QF]=LI[dP];end;else MR=jI-0X00001;end;else CR[sf[0x5]]=sf[1];end;end;end;else if Lf>=19 then if Lf~=0X14 then(CR)[sf[5]]=s(CR[sf[0x0004]],CR[sf[0x7]]);else(CR[sf[5]])[CR[sf[0X4]]]=sf[3];end;else CR[sf[0X05]]=CR[sf[0X4]]^CR[sf[7]];end;end;else if not(Lf>=0Xc)then if Lf~=0X0B then if not(CR[sf[4]]<=CR[sf[0X7]])then pR=sf[0x5];end;else repeat local w_,r_,v_=Gw,CR,sf[0X5];if not(#w_>0)then else local qy={};for q5,H5 in G,w_ do for qz,uz in G,H5 do do if not(uz[1]==r_ and uz[0X2]>=v_)then else local st=uz[2];do if not qy[st]then qy[st]={r_[st]};end;end;(uz)[0X01]=qy[st];uz[0x2]=1;end;end;end;end;end;until true;end;else if not(Lf<0XD)then do if Lf~=14 then local aL=sf[0X5];CR[aL](W(CR,aL+1,MR));do MR=aL-0X0001;end;else if sf[0X07]==0x15 then do pR=pR-1;end;(xw)[pR]={[4]=(sf[4]-0X0008c),[2]=53,[5]=(sf[5]-0X8c)};else CR[sf[5]]=nil;end;end;end;else if CR[sf[0x4]]~=CR[sf[0X7]]then else pR=sf[0x5];end;end;end;end;end;end;end;else if Lf>=64 then if not(Lf<0X4B)then if not(Lf<80)then if Lf<83 then if Lf<81 then CR[sf[5]]=CR[sf[4]]==CR[sf[7]];else if Lf~=82 then local mM=sf[5];local RM=CR[mM];local JM=((sf[7]-1)*50);for OR=1,MR-mM do(RM)[JM+OR]=CR[mM+OR];end;else(CR)[sf[5]]=CR[sf[4]]*CR[sf[7]];end;end;else if Lf>=0X54 then do if Lf~=85 then(CR)[sf[5]]=CR[sf[0x4]]%CR[sf[0x7]];else local e7=sf[0X05];local U7=CR[e7+0X2];local m7=CR[e7+1];local V7=CR[e7];CR[e7]=c(function()do for GR=V7,m7,U7 do(x)(true,GR);end;end;end);do pR=sf[4];end;end;end;else do if sf[0x00007]~=0x00046 then if not(not CR[sf[5]])then else pR=sf[4];end;else pR=pR-1;(xw)[pR]={[0X5]=(sf[0X5]-164),[0x002]=0X001A,[4]=(sf[0X4]-0x00A4)};end;end;end;end;else if Lf>=77 then if Lf<78 then repeat local mY,vY=Gw,(CR);if not(#mY>0)then else local XO=({});for kr,Lr in G,mY do for X2,J2 in G,Lr do if J2[0X1]==vY and J2[2]>=0X0000 then local u7=(J2[2]);if not(not XO[u7])then else do(XO)[u7]={vY[u7]};end;end;J2[1]=XO[u7];(J2)[2]=1;end;end;end;end;until true;return true,sf[5],0X00001;else do if Lf==0X00004F then if sf[7]==0X00E1 then pR=pR-1;do(xw)[pR]={[0x5]=(sf[0x05]-0X000D8),[4]=(sf[0X00004]-0XD8),[2]=26};end;elseif sf[0x7]~=0X00067 then(CR)[sf[0x5]]=-CR[sf[4]];else pR=pR-0x1;xw[pR]={[0X4]=(sf[0X4]-206),[0X5]=(sf[5]-206),[0X02]=59};end;else tR[sf[0X1]]=CR[sf[0X5]];end;end;end;else if Lf~=0X4C then(CR)[sf[5]]=a(CR[sf[0X04]]);else local Yq,Mq=sf[0X5],(CR[sf[0X00004]]);(CR)[Yq+0X00001]=Mq;(CR)[Yq]=Mq[sf[0X3]];end;end;end;else if not(Lf<69)then do if not(Lf>=0x48)then if Lf>=0X46 then do if Lf~=71 then CR[sf[5]]=true;else do if CR[sf[0X4]]~=CR[sf[7]]then pR=sf[5];end;end;end;end;else do Ir[sf[4]]=CR[sf[0X5]];end;end;else if not(Lf<0X49)then if Lf~=74 then CR[sf[5]]={W({},1,sf[0X4])};else(CR)[sf[0x0005]]=not CR[sf[0X004]];end;else do(CR)[sf[0X0005]]=CR[sf[4]]<=CR[sf[0X7]];end;end;end;end;else if Lf<66 then if Lf==0X41 then local W9=(sf[5]);local D9=(c(function(...)x();for ig,Eg in...do(x)(true,ig,Eg);end;end));(D9)(CR[W9],CR[W9+0x01],CR[W9+0x00002]);MR=W9;CR[W9]=D9;pR=sf[4];else if sf[7]==0X04a then do pR=pR-0X1;end;xw[pR]={[5]=(sf[0x5]-0Xa7),[0X02]=31,[0X00004]=(sf[4]-167)};else local Fj,Ej=oR-Cw,sf[0x5];if not(Fj<0)then else do Fj=-0X1;end;end;for kr=Ej,Ej+Fj do CR[kr]=sR[Cw+(kr-Ej)+0x00001];end;do MR=Ej+Fj;end;end;end;else do if not(Lf>=0X43)then do MR=sf[0X05];end;CR[MR]();MR=MR-1;else if Lf~=68 then CR[sf[5]]=CR[sf[4]]+CR[sf[0X7]];else local ip=sf[0X005];local Tp=c(function(...)(x)();for L3,y3,s3,p3,h3,i3,X3,E3,g3,D3 in...do(x)(true,{L3,y3,s3,p3,h3,i3,X3,E3,g3,D3});end;end);Tp(CR[ip],CR[ip+1],CR[ip+0X02]);MR=ip;CR[ip]=Tp;do pR=sf[4];end;end;end;end;end;end;end;else if not(Lf>=0X35)then if not(Lf>=48)then if not(Lf>=45)then do if Lf==0X00002c then if not(CR[sf[4]]<CR[sf[0X7]])then pR=sf[0X5];end;else local DD=sf[0X05];local vD,qD,YD=CR[DD]();if not(vD)then else do(CR)[DD+1]=qD;end;CR[DD+0X2]=YD;pR=sf[4];end;end;end;else if not(Lf>=0x2E)then(CR[sf[5]])[sf[0x1]]=CR[sf[0X7]];else if Lf==0X2f then repeat local nc,sc=Gw,CR;do if not(#nc>0X0000)then else local eg={};do for T3,U3 in G,nc do for Wu,Ru in G,U3 do if Ru[0X1]==sc and Ru[2]>=0x0 then local DX=Ru[0x2];if not(not eg[DX])then else do eg[DX]={sc[DX]};end;end;Ru[1]=eg[DX];Ru[0X0002]=1;end;end;end;end;end;end;until true;return true,sf[0X0005],0X00;else do if CR[sf[4]]==sf[0X00003]then pR=sf[5];end;end;end;end;end;else if not(Lf>=50)then if Lf~=0x31 then local sJ=(sf[0X00005]);local lJ,YJ=CR[sJ]();if not(lJ)then else pR=sf[0X4];(CR)[sJ+3]=YJ;end;else local gE=(Xw[sf[0X4]]);local iE=(gE[0x3]);local fE=(#iE);local hE=nil;do if fE>0X00000 then hE={};for gh=1,fE do local Kh=iE[gh];if Kh[0X1]~=0 then(hE)[gh-1]=Bw[Kh[0X2]];else do(hE)[gh-1]={CR,Kh[2]};end;end;end;(h)(Gw,hE);end;end;do(CR)[sf[5]]=Mr(hE,gE,tR);end;end;else if not(Lf<0x33)then if Lf~=52 then CR[sf[0X005]]=CR[sf[4]]%sf[3];else if not(CR[sf[5]])then else pR=sf[4];end;end;else(CR)[sf[5]]=CR[sf[4]]>CR[sf[7]];end;end;end;else if Lf>=58 then if Lf<0X3D then do if Lf<0X3b then do(CR)[sf[5]]=CR[sf[4]]~=CR[sf[0X07]];end;else if Lf~=60 then repeat local B5,Q5=Gw,(CR);if#B5>0X00000 then local HI=({});for lF,JF in G,B5 do for Qn,qn in G,JF do do if not(qn[1]==Q5 and qn[2]>=0)then else local l4=qn[2];if not HI[l4]then(HI)[l4]={Q5[l4]};end;qn[0X1]=HI[l4];(qn)[0X00002]=1;end;end;end;end;end;until true;local Va=(sf[5]);return false,Va,Va+sf[4]-0X2;else local Yg=(sf[0X5]);local Ig=c(function(...)x();for dp in...do(x)(true,dp);end;end);(Ig)(CR[Yg],CR[Yg+1],CR[Yg+0X2]);do MR=Yg;end;do(CR)[Yg]=Ig;end;pR=sf[4];end;end;end;else do if Lf<62 then do CR[sf[0x05]]=CR[sf[4]]~=sf[3];end;else if Lf~=63 then if sf[7]==61 then do pR=pR-0X1;end;do xw[pR]={[4]=(sf[0x00004]-93),[0x02]=0X40,[0x00005]=(sf[0x05]-0x5d)};end;else local PE=sf[0X00005];for J_=PE,PE+(sf[0x04]-1)do(CR)[J_]=sR[Cw+(J_-PE)+1];end;end;else local d0=sf[5];CR[d0]=CR[d0](CR[d0+0X00001]);MR=d0;end;end;end;end;else do if Lf>=0x37 then if Lf<56 then local aK=sf[0X04];CR[sf[0X0005]]=CR[aK]..CR[aK+0X1];else if Lf~=57 then local qf=(sf[5]);local xf,af=CR[qf]();if xf then do CR[qf+0X01]=af;end;pR=sf[0x4];end;else local I3=Bw[sf[0x04]];(I3[1])[I3[0X2]]=CR[sf[5]];end;end;else if Lf~=54 then repeat local va,ya=Gw,CR;if not(#va>0X0)then else local S1={};for Hw,aw in G,va do for Xv,Yv in G,aw do if Yv[1]==ya and Yv[2]>=0 then local TH=Yv[2];do if not(not S1[TH])then else(S1)[TH]={ya[TH]};end;end;(Yv)[1]=S1[TH];Yv[0X2]=1;end;end;end;end;until true;do return;end;else if CR[sf[0X4]]~=sf[3]then pR=sf[0X0005];end;end;end;end;end;end;end;end;end;end;end);if yR then if qR then if YR==1 then do return CR[xR]();end;else return CR[xR](W(CR,xR+1,MR));end;elseif not(xR)then else return W(CR,xR,YR);end;else do if q(qR)~="s\116r\105\110g"then C(qR,0X0);else if b(qR,"a\116t\101m\112t\032t\111 \121iel\100\032acro\115s\032\109\101\116a\109\101thod\047C%\045cal\108 b\111und\097r\121")then do return coroutine.yield();end;end;if not(b(qR,'\094\046-\058\037\100+: '))then C(qR,0);else(C)("Luraph Script:"..(jw[pR-1]or'\040\105n\116\101r\110al)')..": "..D(qR),0);end;end;end;end;end;do if not(l)then else l(nw,ow);end;end;return nw;end;Ur=4;else if Ur~=0x1 then fr=function(Rv)local Uv=m();local bv=(nil);do for Ao=0X0,2 do do if Ao<=0X000 then bv="";else if Ao~=1 then E=E+Uv;else for Hz=0X1,Uv,0X0001f3d do local uz,dz,Az=4,nil,(nil);do while(true)do if not(uz<=0x001)then if not(uz<=2)then if uz~=3 then do dz=Hz+0X1F3d-0X1;end;uz=3;else if dz>Uv then do dz=Uv;end;end;uz=1;end;else for el=Er,#Az do local Nl=0;do repeat if Nl==0 then do(Az)[el]=d(Az[el],Q);end;do Nl=0x01;end;else Q=(Rv*Q+0X000DF)%256;do Nl=2;end;end;until Nl==0X2;end;end;uz=0;end;else if uz==0 then bv=bv..H(W(Az));break;else Az={M(w,E+Hz-1,E+dz-1)};uz=2;end;end;end;end;end;end;end;end;end;end;return bv;end;Ur=0X0C;else return Mr(nil,ir,K)(...);end;end;end;else if Ur<=10 then if Ur<=0X008 then if Ur~=7 then k=function()local iW=r();local vW=0x01;while(true)do if vW==0X0 then return iW;else if not(iW>S)then else return iW-Z;end;do vW=0X0;end;end;end;end;Ur=6;else Ur=0;end;else if Ur==0X00009 then(Ir)[0X0002]=Dr;Ur=0X5;else vr=J();Ur=3;end;end;else do if Ur<=12 then if Ur~=11 then U={Zr,0X00004,0X005};do Ur=14;end;else qr=function(...)do return v(ar,...),{...};end;end;Ur=0x2;end;else if Ur~=0X000D then Ir={};do Ur=7;end;else ir=Hr();do Ur=0x9;end;end;end;end;end;end;end;end;end)(string,2,0x09,'\098a\110d',0X0008,nil,0X03,0x0005,0X00001,0,_ENV,bit,coroutine.wrap,13,0X7,bit32,0x6,32,next,10,tostring,0Xc,0X000b,rawset,string.sub,0xtype,15,coroutine,string.rep,'rs\104\105ft',select,assert,unpack,"#",...);end;